name: Build, Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Generate Dynamic Image Tag
      id: tag
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV
        echo "::set-output name=image_tag::$IMAGE_TAG"

    - name: Build Docker Image
      run: |
        docker build -t resume-site:${{ env.image_tag }} .
        docker tag resume-site:${{ env.image_tag }} ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.image_tag }}

    - name: Push to Amazon ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.image_tag }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Register New Task Definition
      id: task-def
      run: |
        echo "Fetching current task definition..."
        task_definition=$(aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} | jq '.taskDefinition | del(.taskDefinitionArn, .requiresAttributes, .compatibilities, .revision, .status, .registeredAt, .registeredBy)')
        updated_task_definition=$(echo $task_definition | jq --arg IMAGE_URI "${{ secrets.ECR_REPOSITORY_URI }}:${{ needs.build-and-push.outputs.image_tag }}" '.containerDefinitions[0].image = $IMAGE_URI')
        echo $updated_task_definition | jq '.containerDefinitions[0].image'
        echo $updated_task_definition > updated-task-definition.json
        new_task_definition_arn=$(aws ecs register-task-definition --cli-input-json file://updated-task-definition.json | jq -r '.taskDefinition.taskDefinitionArn')
        echo "New task definition ARN: $new_task_definition_arn"
        echo "task_definition_arn=$new_task_definition_arn" >> $GITHUB_ENV

    - name: Update ECS Service
      run: |
        aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --task-definition ${{ env.task_definition_arn }} --force-new-deployment
